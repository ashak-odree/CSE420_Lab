Terminals unused in grammar

   DO
   BREAK
   CHAR
   DOUBLE
   SWITCH
   CASE
   DEFAULT
   CONTINUE


Grammar

    0 $accept: program $end

    1 program: program unit
    2        | unit

    3 unit: var_declaration
    4     | func_definition

    5 func_definition: type_specifier id_name LPAREN parameter_list RPAREN compound_statement
    6                | type_specifier id_name LPAREN RPAREN compound_statement

    7 parameter_list: parameter_list COMMA type_specifier ID
    8               | parameter_list COMMA type_specifier
    9               | type_specifier ID
   10               | type_specifier

   11 compound_statement: LCURL statements RCURL
   12                   | LCURL RCURL

   13 var_declaration: type_specifier declaration_list SEMICOLON

   14 type_specifier: INT
   15               | FLOAT
   16               | VOID

   17 declaration_list: declaration_list COMMA id_name
   18                 | declaration_list COMMA id_name LTHIRD CONST_INT RTHIRD
   19                 | id_name
   20                 | id_name LTHIRD CONST_INT RTHIRD

   21 id_name: ID

   22 statements: statement
   23           | statements statement

   24 statement: var_declaration
   25          | expression_statement
   26          | compound_statement
   27          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   28          | IF LPAREN expression RPAREN statement
   29          | IF LPAREN expression RPAREN statement ELSE statement
   30          | WHILE LPAREN expression RPAREN statement
   31          | PRINTF LPAREN id_name RPAREN SEMICOLON
   32          | RETURN expression SEMICOLON

   33 expression_statement: SEMICOLON
   34                     | expression SEMICOLON

   35 variable: id_name
   36         | id_name LTHIRD expression RTHIRD

   37 expression: logic_expression
   38           | variable ASSIGNOP logic_expression

   39 logic_expression: rel_expression
   40                 | rel_expression LOGICOP rel_expression

   41 rel_expression: simple_expression
   42               | simple_expression RELOP simple_expression

   43 simple_expression: term
   44                  | simple_expression ADDOP term

   45 term: unary_expression
   46     | term MULOP unary_expression

   47 unary_expression: ADDOP unary_expression
   48                 | NOT unary_expression
   49                 | factor

   50 factor: variable
   51       | id_name LPAREN argument_list RPAREN
   52       | LPAREN expression RPAREN
   53       | CONST_INT
   54       | CONST_FLOAT
   55       | variable INCOP
   56       | variable DECOP

   57 argument_list: arguments
   58              | /* empty */

   59 arguments: arguments COMMA logic_expression
   60          | logic_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 28 29
ELSE (259) 29
FOR (260) 27
WHILE (261) 30
DO (262)
BREAK (263)
INT (264) 14
CHAR (265)
FLOAT (266) 15
DOUBLE (267)
VOID (268) 16
RETURN (269) 32
SWITCH (270)
CASE (271)
DEFAULT (272)
CONTINUE (273)
PRINTF (274) 31
ADDOP (275) 44 47
MULOP (276) 46
INCOP (277) 55
DECOP (278) 56
RELOP (279) 42
ASSIGNOP (280) 38
LOGICOP (281) 40
NOT (282) 48
LPAREN (283) 5 6 27 28 29 30 31 51 52
RPAREN (284) 5 6 27 28 29 30 31 51 52
LCURL (285) 11 12
RCURL (286) 11 12
LTHIRD (287) 18 20 36
RTHIRD (288) 18 20 36
COMMA (289) 7 8 17 18 59
SEMICOLON (290) 13 31 32 33 34
CONST_INT (291) 18 20 53
CONST_FLOAT (292) 54
ID (293) 7 9 21
LOWER_THAN_ELSE (294)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1 2, on right: 0 1
unit (42)
    on left: 3 4, on right: 1 2
func_definition (43)
    on left: 5 6, on right: 4
parameter_list (44)
    on left: 7 8 9 10, on right: 5 7 8
compound_statement (45)
    on left: 11 12, on right: 5 6 26
var_declaration (46)
    on left: 13, on right: 3 24
type_specifier (47)
    on left: 14 15 16, on right: 5 6 7 8 9 10 13
declaration_list (48)
    on left: 17 18 19 20, on right: 13 17 18
id_name (49)
    on left: 21, on right: 5 6 17 18 19 20 31 35 36 51
statements (50)
    on left: 22 23, on right: 11 23
statement (51)
    on left: 24 25 26 27 28 29 30 31 32, on right: 22 23 27 28 29 30
expression_statement (52)
    on left: 33 34, on right: 25 27
variable (53)
    on left: 35 36, on right: 38 50 55 56
expression (54)
    on left: 37 38, on right: 27 28 29 30 32 34 36 52
logic_expression (55)
    on left: 39 40, on right: 37 38 59 60
rel_expression (56)
    on left: 41 42, on right: 39 40
simple_expression (57)
    on left: 43 44, on right: 41 42 44
term (58)
    on left: 45 46, on right: 43 44 46
unary_expression (59)
    on left: 47 48 49, on right: 45 46 47 48
factor (60)
    on left: 50 51 52 53 54 55 56, on right: 49
argument_list (61)
    on left: 57 58, on right: 51
arguments (62)
    on left: 59 60, on right: 57 59


State 0

    0 $accept: . program $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    program          go to state 4
    unit             go to state 5
    func_definition  go to state 6
    var_declaration  go to state 7
    type_specifier   go to state 8


State 1

   14 type_specifier: INT .

    $default  reduce using rule 14 (type_specifier)


State 2

   15 type_specifier: FLOAT .

    $default  reduce using rule 15 (type_specifier)


State 3

   16 type_specifier: VOID .

    $default  reduce using rule 16 (type_specifier)


State 4

    0 $accept: program . $end
    1 program: program . unit

    $end   shift, and go to state 9
    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    unit             go to state 10
    func_definition  go to state 6
    var_declaration  go to state 7
    type_specifier   go to state 8


State 5

    2 program: unit .

    $default  reduce using rule 2 (program)


State 6

    4 unit: func_definition .

    $default  reduce using rule 4 (unit)


State 7

    3 unit: var_declaration .

    $default  reduce using rule 3 (unit)


State 8

    5 func_definition: type_specifier . id_name LPAREN parameter_list RPAREN compound_statement
    6                | type_specifier . id_name LPAREN RPAREN compound_statement
   13 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 11

    declaration_list  go to state 12
    id_name           go to state 13


State 9

    0 $accept: program $end .

    $default  accept


State 10

    1 program: program unit .

    $default  reduce using rule 1 (program)


State 11

   21 id_name: ID .

    $default  reduce using rule 21 (id_name)


State 12

   13 var_declaration: type_specifier declaration_list . SEMICOLON
   17 declaration_list: declaration_list . COMMA id_name
   18                 | declaration_list . COMMA id_name LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 14
    SEMICOLON  shift, and go to state 15


State 13

    5 func_definition: type_specifier id_name . LPAREN parameter_list RPAREN compound_statement
    6                | type_specifier id_name . LPAREN RPAREN compound_statement
   19 declaration_list: id_name .
   20                 | id_name . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 16
    LTHIRD  shift, and go to state 17

    $default  reduce using rule 19 (declaration_list)


State 14

   17 declaration_list: declaration_list COMMA . id_name
   18                 | declaration_list COMMA . id_name LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 11

    id_name  go to state 18


State 15

   13 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 13 (var_declaration)


State 16

    5 func_definition: type_specifier id_name LPAREN . parameter_list RPAREN compound_statement
    6                | type_specifier id_name LPAREN . RPAREN compound_statement

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 19

    parameter_list  go to state 20
    type_specifier  go to state 21


State 17

   20 declaration_list: id_name LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 22


State 18

   17 declaration_list: declaration_list COMMA id_name .
   18                 | declaration_list COMMA id_name . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 23

    $default  reduce using rule 17 (declaration_list)


State 19

    6 func_definition: type_specifier id_name LPAREN RPAREN . compound_statement

    LCURL  shift, and go to state 24

    compound_statement  go to state 25


State 20

    5 func_definition: type_specifier id_name LPAREN parameter_list . RPAREN compound_statement
    7 parameter_list: parameter_list . COMMA type_specifier ID
    8               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 26
    COMMA   shift, and go to state 27


State 21

    9 parameter_list: type_specifier . ID
   10               | type_specifier .

    ID  shift, and go to state 28

    $default  reduce using rule 10 (parameter_list)


State 22

   20 declaration_list: id_name LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 29


State 23

   18 declaration_list: declaration_list COMMA id_name LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 30


State 24

   11 compound_statement: LCURL . statements RCURL
   12                   | LCURL . RCURL

    IF           shift, and go to state 31
    FOR          shift, and go to state 32
    WHILE        shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 34
    PRINTF       shift, and go to state 35
    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    LCURL        shift, and go to state 24
    RCURL        shift, and go to state 39
    SEMICOLON    shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    compound_statement    go to state 43
    var_declaration       go to state 44
    type_specifier        go to state 45
    id_name               go to state 46
    statements            go to state 47
    statement             go to state 48
    expression_statement  go to state 49
    variable              go to state 50
    expression            go to state 51
    logic_expression      go to state 52
    rel_expression        go to state 53
    simple_expression     go to state 54
    term                  go to state 55
    unary_expression      go to state 56
    factor                go to state 57


State 25

    6 func_definition: type_specifier id_name LPAREN RPAREN compound_statement .

    $default  reduce using rule 6 (func_definition)


State 26

    5 func_definition: type_specifier id_name LPAREN parameter_list RPAREN . compound_statement

    LCURL  shift, and go to state 24

    compound_statement  go to state 58


State 27

    7 parameter_list: parameter_list COMMA . type_specifier ID
    8               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 59


State 28

    9 parameter_list: type_specifier ID .

    $default  reduce using rule 9 (parameter_list)


State 29

   20 declaration_list: id_name LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 20 (declaration_list)


State 30

   18 declaration_list: declaration_list COMMA id_name LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 60


State 31

   28 statement: IF . LPAREN expression RPAREN statement
   29          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 61


State 32

   27 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 62


State 33

   30 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 63


State 34

   32 statement: RETURN . expression SEMICOLON

    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    id_name            go to state 46
    variable           go to state 50
    expression         go to state 64
    logic_expression   go to state 52
    rel_expression     go to state 53
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 35

   31 statement: PRINTF . LPAREN id_name RPAREN SEMICOLON

    LPAREN  shift, and go to state 65


State 36

   47 unary_expression: ADDOP . unary_expression

    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    id_name           go to state 46
    variable          go to state 66
    unary_expression  go to state 67
    factor            go to state 57


State 37

   48 unary_expression: NOT . unary_expression

    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    id_name           go to state 46
    variable          go to state 66
    unary_expression  go to state 68
    factor            go to state 57


State 38

   52 factor: LPAREN . expression RPAREN

    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    id_name            go to state 46
    variable           go to state 50
    expression         go to state 69
    logic_expression   go to state 52
    rel_expression     go to state 53
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 39

   12 compound_statement: LCURL RCURL .

    $default  reduce using rule 12 (compound_statement)


State 40

   33 expression_statement: SEMICOLON .

    $default  reduce using rule 33 (expression_statement)


State 41

   53 factor: CONST_INT .

    $default  reduce using rule 53 (factor)


State 42

   54 factor: CONST_FLOAT .

    $default  reduce using rule 54 (factor)


State 43

   26 statement: compound_statement .

    $default  reduce using rule 26 (statement)


State 44

   24 statement: var_declaration .

    $default  reduce using rule 24 (statement)


State 45

   13 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 11

    declaration_list  go to state 12
    id_name           go to state 70


State 46

   35 variable: id_name .
   36         | id_name . LTHIRD expression RTHIRD
   51 factor: id_name . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 71
    LTHIRD  shift, and go to state 72

    $default  reduce using rule 35 (variable)


State 47

   11 compound_statement: LCURL statements . RCURL
   23 statements: statements . statement

    IF           shift, and go to state 31
    FOR          shift, and go to state 32
    WHILE        shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 34
    PRINTF       shift, and go to state 35
    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    LCURL        shift, and go to state 24
    RCURL        shift, and go to state 73
    SEMICOLON    shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    compound_statement    go to state 43
    var_declaration       go to state 44
    type_specifier        go to state 45
    id_name               go to state 46
    statement             go to state 74
    expression_statement  go to state 49
    variable              go to state 50
    expression            go to state 51
    logic_expression      go to state 52
    rel_expression        go to state 53
    simple_expression     go to state 54
    term                  go to state 55
    unary_expression      go to state 56
    factor                go to state 57


State 48

   22 statements: statement .

    $default  reduce using rule 22 (statements)


State 49

   25 statement: expression_statement .

    $default  reduce using rule 25 (statement)


State 50

   38 expression: variable . ASSIGNOP logic_expression
   50 factor: variable .
   55       | variable . INCOP
   56       | variable . DECOP

    INCOP     shift, and go to state 75
    DECOP     shift, and go to state 76
    ASSIGNOP  shift, and go to state 77

    $default  reduce using rule 50 (factor)


State 51

   34 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 78


State 52

   37 expression: logic_expression .

    $default  reduce using rule 37 (expression)


State 53

   39 logic_expression: rel_expression .
   40                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 79

    $default  reduce using rule 39 (logic_expression)


State 54

   41 rel_expression: simple_expression .
   42               | simple_expression . RELOP simple_expression
   44 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 80
    RELOP  shift, and go to state 81

    $default  reduce using rule 41 (rel_expression)


State 55

   43 simple_expression: term .
   46 term: term . MULOP unary_expression

    MULOP  shift, and go to state 82

    $default  reduce using rule 43 (simple_expression)


State 56

   45 term: unary_expression .

    $default  reduce using rule 45 (term)


State 57

   49 unary_expression: factor .

    $default  reduce using rule 49 (unary_expression)


State 58

    5 func_definition: type_specifier id_name LPAREN parameter_list RPAREN compound_statement .

    $default  reduce using rule 5 (func_definition)


State 59

    7 parameter_list: parameter_list COMMA type_specifier . ID
    8               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 83

    $default  reduce using rule 8 (parameter_list)


State 60

   18 declaration_list: declaration_list COMMA id_name LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 18 (declaration_list)


State 61

   28 statement: IF LPAREN . expression RPAREN statement
   29          | IF LPAREN . expression RPAREN statement ELSE statement

    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    id_name            go to state 46
    variable           go to state 50
    expression         go to state 84
    logic_expression   go to state 52
    rel_expression     go to state 53
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 62

   27 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    SEMICOLON    shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    id_name               go to state 46
    expression_statement  go to state 85
    variable              go to state 50
    expression            go to state 51
    logic_expression      go to state 52
    rel_expression        go to state 53
    simple_expression     go to state 54
    term                  go to state 55
    unary_expression      go to state 56
    factor                go to state 57


State 63

   30 statement: WHILE LPAREN . expression RPAREN statement

    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    id_name            go to state 46
    variable           go to state 50
    expression         go to state 86
    logic_expression   go to state 52
    rel_expression     go to state 53
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 64

   32 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 87


State 65

   31 statement: PRINTF LPAREN . id_name RPAREN SEMICOLON

    ID  shift, and go to state 11

    id_name  go to state 88


State 66

   50 factor: variable .
   55       | variable . INCOP
   56       | variable . DECOP

    INCOP  shift, and go to state 75
    DECOP  shift, and go to state 76

    $default  reduce using rule 50 (factor)


State 67

   47 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 47 (unary_expression)


State 68

   48 unary_expression: NOT unary_expression .

    $default  reduce using rule 48 (unary_expression)


State 69

   52 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 89


State 70

   19 declaration_list: id_name .
   20                 | id_name . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 17

    $default  reduce using rule 19 (declaration_list)


State 71

   51 factor: id_name LPAREN . argument_list RPAREN

    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    $default  reduce using rule 58 (argument_list)

    id_name            go to state 46
    variable           go to state 66
    logic_expression   go to state 90
    rel_expression     go to state 53
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57
    argument_list      go to state 91
    arguments          go to state 92


State 72

   36 variable: id_name LTHIRD . expression RTHIRD

    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    id_name            go to state 46
    variable           go to state 50
    expression         go to state 93
    logic_expression   go to state 52
    rel_expression     go to state 53
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 73

   11 compound_statement: LCURL statements RCURL .

    $default  reduce using rule 11 (compound_statement)


State 74

   23 statements: statements statement .

    $default  reduce using rule 23 (statements)


State 75

   55 factor: variable INCOP .

    $default  reduce using rule 55 (factor)


State 76

   56 factor: variable DECOP .

    $default  reduce using rule 56 (factor)


State 77

   38 expression: variable ASSIGNOP . logic_expression

    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    id_name            go to state 46
    variable           go to state 66
    logic_expression   go to state 94
    rel_expression     go to state 53
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 78

   34 expression_statement: expression SEMICOLON .

    $default  reduce using rule 34 (expression_statement)


State 79

   40 logic_expression: rel_expression LOGICOP . rel_expression

    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    id_name            go to state 46
    variable           go to state 66
    rel_expression     go to state 95
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 80

   44 simple_expression: simple_expression ADDOP . term

    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    id_name           go to state 46
    variable          go to state 66
    term              go to state 96
    unary_expression  go to state 56
    factor            go to state 57


State 81

   42 rel_expression: simple_expression RELOP . simple_expression

    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    id_name            go to state 46
    variable           go to state 66
    simple_expression  go to state 97
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 82

   46 term: term MULOP . unary_expression

    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    id_name           go to state 46
    variable          go to state 66
    unary_expression  go to state 98
    factor            go to state 57


State 83

    7 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 7 (parameter_list)


State 84

   28 statement: IF LPAREN expression . RPAREN statement
   29          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 99


State 85

   27 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    SEMICOLON    shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    id_name               go to state 46
    expression_statement  go to state 100
    variable              go to state 50
    expression            go to state 51
    logic_expression      go to state 52
    rel_expression        go to state 53
    simple_expression     go to state 54
    term                  go to state 55
    unary_expression      go to state 56
    factor                go to state 57


State 86

   30 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 101


State 87

   32 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 32 (statement)


State 88

   31 statement: PRINTF LPAREN id_name . RPAREN SEMICOLON

    RPAREN  shift, and go to state 102


State 89

   52 factor: LPAREN expression RPAREN .

    $default  reduce using rule 52 (factor)


State 90

   60 arguments: logic_expression .

    $default  reduce using rule 60 (arguments)


State 91

   51 factor: id_name LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 103


State 92

   57 argument_list: arguments .
   59 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 104

    $default  reduce using rule 57 (argument_list)


State 93

   36 variable: id_name LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 105


State 94

   38 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 38 (expression)


State 95

   40 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 40 (logic_expression)


State 96

   44 simple_expression: simple_expression ADDOP term .
   46 term: term . MULOP unary_expression

    MULOP  shift, and go to state 82

    $default  reduce using rule 44 (simple_expression)


State 97

   42 rel_expression: simple_expression RELOP simple_expression .
   44 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 80

    $default  reduce using rule 42 (rel_expression)


State 98

   46 term: term MULOP unary_expression .

    $default  reduce using rule 46 (term)


State 99

   28 statement: IF LPAREN expression RPAREN . statement
   29          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 31
    FOR          shift, and go to state 32
    WHILE        shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 34
    PRINTF       shift, and go to state 35
    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    LCURL        shift, and go to state 24
    SEMICOLON    shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    compound_statement    go to state 43
    var_declaration       go to state 44
    type_specifier        go to state 45
    id_name               go to state 46
    statement             go to state 106
    expression_statement  go to state 49
    variable              go to state 50
    expression            go to state 51
    logic_expression      go to state 52
    rel_expression        go to state 53
    simple_expression     go to state 54
    term                  go to state 55
    unary_expression      go to state 56
    factor                go to state 57


State 100

   27 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    id_name            go to state 46
    variable           go to state 50
    expression         go to state 107
    logic_expression   go to state 52
    rel_expression     go to state 53
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 101

   30 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 31
    FOR          shift, and go to state 32
    WHILE        shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 34
    PRINTF       shift, and go to state 35
    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    LCURL        shift, and go to state 24
    SEMICOLON    shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    compound_statement    go to state 43
    var_declaration       go to state 44
    type_specifier        go to state 45
    id_name               go to state 46
    statement             go to state 108
    expression_statement  go to state 49
    variable              go to state 50
    expression            go to state 51
    logic_expression      go to state 52
    rel_expression        go to state 53
    simple_expression     go to state 54
    term                  go to state 55
    unary_expression      go to state 56
    factor                go to state 57


State 102

   31 statement: PRINTF LPAREN id_name RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 109


State 103

   51 factor: id_name LPAREN argument_list RPAREN .

    $default  reduce using rule 51 (factor)


State 104

   59 arguments: arguments COMMA . logic_expression

    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    id_name            go to state 46
    variable           go to state 66
    logic_expression   go to state 110
    rel_expression     go to state 53
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 105

   36 variable: id_name LTHIRD expression RTHIRD .

    $default  reduce using rule 36 (variable)


State 106

   28 statement: IF LPAREN expression RPAREN statement .
   29          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 111

    $default  reduce using rule 28 (statement)


State 107

   27 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 112


State 108

   30 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 30 (statement)


State 109

   31 statement: PRINTF LPAREN id_name RPAREN SEMICOLON .

    $default  reduce using rule 31 (statement)


State 110

   59 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 59 (arguments)


State 111

   29 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 31
    FOR          shift, and go to state 32
    WHILE        shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 34
    PRINTF       shift, and go to state 35
    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    LCURL        shift, and go to state 24
    SEMICOLON    shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    compound_statement    go to state 43
    var_declaration       go to state 44
    type_specifier        go to state 45
    id_name               go to state 46
    statement             go to state 113
    expression_statement  go to state 49
    variable              go to state 50
    expression            go to state 51
    logic_expression      go to state 52
    rel_expression        go to state 53
    simple_expression     go to state 54
    term                  go to state 55
    unary_expression      go to state 56
    factor                go to state 57


State 112

   27 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 31
    FOR          shift, and go to state 32
    WHILE        shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 34
    PRINTF       shift, and go to state 35
    ADDOP        shift, and go to state 36
    NOT          shift, and go to state 37
    LPAREN       shift, and go to state 38
    LCURL        shift, and go to state 24
    SEMICOLON    shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    ID           shift, and go to state 11

    compound_statement    go to state 43
    var_declaration       go to state 44
    type_specifier        go to state 45
    id_name               go to state 46
    statement             go to state 114
    expression_statement  go to state 49
    variable              go to state 50
    expression            go to state 51
    logic_expression      go to state 52
    rel_expression        go to state 53
    simple_expression     go to state 54
    term                  go to state 55
    unary_expression      go to state 56
    factor                go to state 57


State 113

   29 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 29 (statement)


State 114

   27 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 27 (statement)
